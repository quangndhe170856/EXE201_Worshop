// src/data/events.ts
import axios from "axios";

/**
 * Ki·ªÉu d·ªØ li·ªáu cho 1 s·ª± ki·ªán
 */
export interface EventResponse {
  id: string;
  title: string;
  slug: string;
  description: string;
  startAt: string;
  endAt: string | null;
  locationName: string;
  address: string;
  featured: boolean;
  status: string;
  registerUrl?: string;
  createdAt: string;
  updatedAt: string;
  categories: {
    id: number;
    name: string;
  }[];
  image?: string;
  media?: EventMedia[];
  latitude?: number;
  longitude?: number;
}

/**
 * Ki·ªÉu d·ªØ li·ªáu cho media trong event
 */
export interface EventMedia {
  id: string;
  url: string;
  type?: string;
}

/**
 * C·∫•u tr√∫c response ph√¢n trang (n·∫øu backend tr·∫£ v·ªÅ Page)
 */
export interface PageResponse<T> {
  content: T[];
  totalElements: number;
  totalPages: number;
  size: number;
  number: number;
}

/**
 * üî• H√†m g·ªçi API backend th·∫≠t
 */
export async function fetchEvents(): Promise<EventResponse[]> {
  try {
    // N·∫øu backend tr·∫£ JSON ki·ªÉu PageResponse<EventResponse>
    // => c·∫ßn l·∫•y .content thay v√¨ to√†n b·ªô res.data
    const res = await axios.get("http://localhost:8080/api/events");

    // N·∫øu backend ch·ªâ tr·∫£ m·∫£ng, b·∫°n c√≥ th·ªÉ ƒë·ªïi l·∫°i th√†nh res.data
    if (Array.isArray(res.data)) {
      return res.data as EventResponse[];
    }

    // N·∫øu backend tr·∫£ ki·ªÉu PageResponse, tr·∫£ v·ªÅ content
    return res.data.content ?? [];
  } catch (err) {
    console.error("‚ùå L·ªói khi g·ªçi API events:", err);
    return [];
  }
}
